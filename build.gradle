plugins {
    // Languages
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'

    // Minecraft Tools
    id 'fabric-loom' version '0.8-SNAPSHOT'

    // Build Tools
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'com.github.gmazzo.buildconfig' version '3.0.1'
    id 'maven-publish'
}

group 'dev.isxander'

def modPackage = "$group.$mod_id"
def isPrerelease =! mod_version_prerelease.trim().isEmpty()

version = {
    def normal = "$mod_version_major.$mod_version_minor.$mod_version_patch"
    if (isPrerelease) normal += "-pre.$mod_version_prerelease"

    return normal
}()

targetCompatibility = sourceCompatibility = JavaVersion.VERSION_16

buildConfig {
    className "${mod_name}Info"
    packageName modPackage
    useKotlinOutput()

    buildConfigField 'String', 'NAME', "\"$mod_name\""
    buildConfigField 'String', 'ID', "\"$mod_id\""
    buildConfigField 'String', 'DESCRIPTION', "\"$mod_description\""

    buildConfigField 'Int', 'VERSION_MAJOR', mod_version_major
    buildConfigField 'Int', 'VERSION_MINOR', mod_version_minor
    buildConfigField 'Int', 'VERSION_PATCH', mod_version_patch
    buildConfigField 'Int?', 'VERSION_PRERELEASE', (isPrerelease ? "$mod_version_prerelease" : 'null')

    buildConfigField 'String', 'VERSION_FULL', "\"${project.version}\""
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.sk1er.club/repository/maven-public' }
}

configurations {
    embedMod
    modImplementation.extendsFrom embedMod
}

dependencies {
    embedMod 'gg.essential:Vigilance:next-148-11700-fabric-SNAPSHOT'

    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$yarn_mappings"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modImplementation "net.fabricmc:fabric-language-kotlin:$kotlin_version"
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 16
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
    }
}

processResources {
    inputs.property 'mod_version', project.version
    inputs.property 'mod_id', mod_id
    inputs.property 'mod_name', mod_name
    inputs.property 'mod_description', mod_description

    filesMatching('fabric.mod.json') {
        expand (
                'mod_version': project.version,
                'mod_id': mod_id,
                'mod_name': mod_name,
                'mod_description': mod_description
        )
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    archiveClassifier.set('')

    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "META-INF/versions/**"
}
